Assign2: Due 11:59PM CT October 13

***Please review the top part of ../hw1/hw1.txt***
***Your chance of success greatly increases if you start very early. Your chance of failure increases if you start late. Please use as many reviews as you possibly can.***

Please bring forward the practices, techniques, and tools you have learned so far. This includes: 
Good code quality
Lightweight design
Minimum code
Automated testing                                                         
Code coverage
Build files (I created them for you in assign1, but it's your turn now to practice and learn further)
Change build.sh in your repository to point to assign2 instead of assign1

Please take small steps. Start with a canary test and one or two more tests.
List your tests in a file named tests.txt. Check them off with a x as you 
implement them. Remember to ask for a review each day. The earlier you start,
the earlier you finish, and less the risk. If you start late, you carry a 
bigger risk. I sincerely hope you will start early and come out winning in 
this course.

Using test first development, write the program described below.

Write a program that reads a file which has multiple line of text and prints 
it to the console with words with correct spelling as is and words with 
incorrect spelling within [].

For example, given the file with
The cow jumped over the moln and the little dog laghed to see such sport and 
the dih ran away with the spon

The output will be:
The cow jumped over the [moln] and the little dog [laghed] to see such sport 
and the [dih] ran away with the [spon]

You can assume that the input file will not contain any punctuations (no 
comma, semi-colon, period, etc.). The program can find if a word is of correct 
spelling or not by querying http://agilec.cs.uh.edu/spell?check=WORD where WORD 
can be replaced with the word to check spelling for.
 
Design the program in a way that 
-we may use a different service to check the spelling without having to change 
any existing code, though adding new small modules of code is OK.

-we may read the lines of text from another source instead of a file. Again 
program should require no change, though adding new small modules of code is 
OK.

Total[100]: 93

Program runs and produces desired output [20]:
Program gracefully handles network error[5]:
All tests pass [10]:
Test quality [20]:
All tests except one do not rely on network [5]:

Code coverage [10]: -1

Design quality [20]: -5
main has all the code instead of delegating the file related code to a separate function, making use of the SLAP.

Code quality [10]: -1
sample.txt is at the top level instead of proper location.
