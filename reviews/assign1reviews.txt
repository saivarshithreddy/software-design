[Reviewed 09/28/23 15:53 PM MDT]
synopsis: build failing, please do not update reviews request when build fails

details:

Please don't update the requestReview.txt when the build is not passing. Instead drop an email asking for help if you need suggestions on how to fix. 

------------------------------------------------------------------------------
[Reviewed 09/28/23 14:32 PM MDT]
synopsis: let's move forward to the next step

details: 

Please see suggestions in files.

------------------------------------------------------------------------------
[Reviewed 09/28/23 05:39 AM MDT]
synopsis~: let's move forward to the next step

details: 

Please see suggestions in files.

Let's do a quick review after these changes.

------------------------------------------------------------------------------
[Reviewed 09/27/23 05:07 AM MDT]
synopsis~: let's refactor

details: 

Please see suggestions in files.

Let's do a quick review after these changes.

------------------------------------------------------------------------------
[Reviewed 09/26/23 18:54 PM MDT]
synopsis: let's revisit the tests

details: 

Please see suggestions in files.

The response to the user should tell how many colors matched in exact position but should not reveal the exact location (otherwise the game is too easy to play).

------------------------------------------------------------------------------
[Reviewed 09/26/23 06:41 AM MDT]
synopsis~: comments found in code

details: 

Comments found in code. Please remove them and then ask for a review.

Please see suggestions in files. Please see previous review below as well.

Got question, drop an email, not a comment in code.

Let's do a quick review after these changes.

------------------------------------------------------------------------------
[Reviewed 09/25/23 18:10 PM MDT]
synopsis: let's revisit the tests

details: 

Please see suggestions in files.

The response to the user should tell how many colors matched in exact position but should not reveal the exact location (otherwise the game is too easy to play).

------------------------------------------------------------------------------
[Reviewed 09/25/23 05:03 AM MDT]
synopsis~: let's move forward

details: 

Please see suggestions in files.

Let's do a quick review after these changes.

------------------------------------------------------------------------------
[Reviewed 09/24/23 20:32 PM MDT]
synopsis: let's make tests easier to read

details: 

Please see suggestions in files.

------------------------------------------------------------------------------
[Reviewed 09/24/23 17:28 PM MDT]
synopsis~: red or yellow in code coverage

details:

Please take a look at the code coverage and make sure the coverage shows 100%.
After fixing the coverage (or ask for help if you need), please ask for review.

------------------------------------------------------------------------------
[Reviewed 09/24/23 06:28 AM MDT]
synopsis: YAGNI, cognitive load, and error prone, let's change the design

details: 

Using strings to model colors is not a good idea. We will make typos, use a different case, etc. Let us think of a better way to model the color.


What does black mean? What does silver mean? That is cognitive load. A good design reduces cognitive load. black or silver is a representation for the user but when modeling we do not have to use them. Imagine in the future the UI decide to use a different color instead of black. Do we plan to change the code then or would we ask the GUI to translate black to the new color (which will make things worse). Instead, we can model the Match for what it stands as a response - Match EXACT, for example, will represent an exact match which can be shown as black in the UI or something else easily in the future.


------------------------------------------------------------------------------
[Reviewed 09/23/23 19:55 PM MDT]
synopsis~: red or yellow in code coverage

details:

Please take a look at the code coverage and make sure the coverage shows 100%.
After fixing the coverage (or ask for help if you need), please ask for review.

------------------------------------------------------------------------------
[Reviewed 09/23/23 15:48 PM MDT]
synopsis~: red or yellow in code coverage

details:

Please take a look at the code coverage and make sure the coverage shows 100%.
After fixing the coverage (or ask for help if you need), please ask for review.

------------------------------------------------------------------------------
[Reviewed 09/23/23 15:14 PM MDT]
synopsis~: red or yellow in code coverage

details:

Please take a look at the code coverage and make sure the coverage shows 100%.
After fixing the coverage (or ask for help if you need), please ask for review.

------------------------------------------------------------------------------
[Reviewed 09/23/23 06:50 AM MDT]
synopsis~: let's write minimum code to make test pass

details: 

Please see suggestions in files.

Let's do a quick review after these changes. Please modify the requestReview.txt file and check it in as soon as you are ready and I will do a review well before the next scheduled review cycle.

------------------------------------------------------------------------------
[Reviewed 09/22/23 16:22 PM MDT]
synopsis~: let's change direction

details: 

Let's change direction. We want to take incremental step, focus on an action or behavior to start with.

Please see tests.txt. Let's start with the test mentioned here.

Let's do a quick review after these changes. Please modify the requestReview.txt file and check it in as soon as you are ready and I will do a review well before the next scheduled review cycle.

------------------------------------------------------------------------------
[Reviewed 09/22/23 03:27 AM MDT]
synopsis: let's create code incrementally

details: 

We will follow test first development. We will not be writing a lot of code quickly, but we will create code incrementally. We will be writing test and minimum code to pass each test.

The version control has all the files committed and it will never forget it. So I have deleted the files created so far. If we ever need it we can pull it back from the version control.

I've created some initial files to work with. Let's use that as a starting point.

Please start with exactly one test after the canary test. Then please write minimum code to make that test pass. At this stage in the course it is almost impossible to write a good test. It is not about getting things write, but it is about figuring things out. So, please do not worry about how good the test is at this time. Come up with something you can think of as a first test after the canary test. Write that and implement minimum code for that. Once that is done, please ask for a review. It is highly likely I will change that, that is one way to learn how to write tests, one step at a time. Once we get past this step, I will start providing feedback on the steps to take.

Let's take small steps. Let us start with the canary test and one test with minimum code to make it pass.

I've created a directory structure and some initial sample code for you to start with.

A CI build has been setup for your project.
You can see files related to this under assign1.

How does this work?
When you check in code, the CI build machine wakes up, fetches the latest 
version of your code, and runs the file build.sh that is under your repository (above assign1). That file in turn runs the build scripts in your assign1 directory.

In case you missed it, please read:
<https://groups.google.com/g/uhcsf23sd/c/SaV7dY7-gTc/m/CMlvGpchBgAJ>

Also, please keep an eye on code coverage. To view the code coverage, please 
run the build using the following command (do not click or double click, 
instead open the command prompt, cd to your assign1 directory, and then run 
from there).

gradlew
Then take a look at the file (using a browser):
build/reports/jacoco/test/html/index.html

------------------------------------------------------------------------------
