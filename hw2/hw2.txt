HW2 Due 11:59PM September 15

***Please review the top part of ../hw1/hw1.txt***
***Your chance of success greatly increases if you start very early. Your chance of failure increases if you start late. Please use as many reviews as you possibly can.***

In this homework we'll create an initial strategic design for a version of the Master Mind game.

Let's first discuss the version of the game that we'll design. We'll not be writing any code in this homework, but only create an initial strategic design.

The object of the game is for the user to guess the colors the program has chosen. The program chooses six distinct colors from among ten colors. The user obviously does not know the colors the program has chosen.

The operations user can perform and the outcome:

User picks six colors:
The program displays a color code back to indicate the progress the user has made. 

If the user guessed the exact color combination, including the positions, the result is six black colors. The game ends now with a message that the user has won and the program reveals the color selected.

If the user guessed only some colors, then the result has as many black colors as the number of direct positions matches and as many silver colors for each match that is in an incorrect position.

For example, if the program selected green, red, blue, white, orange, purple, and the user entered cyan, yellow, blue, orange, violet, red, then the program will display black, silver, silver.

User gives up: 
The program displays the colors selected, game ends with a message the user has lost.

User has made 20 tries:
The program displays the colors selected, game ends with a message the user has lost (unless in the last try the user found the combination).



Create an initial design of this program and answer the questions below. 
Feel free to ask for frequent reviews.

Include a separate file (may be a scan of hand drawn picture if you like, or a pdf, tiff, word document, etc.) which shows a UML diagram of your design. Refer to that diagram from the text description you write here.

1. How would you design this program? 

Note: Please refer to ClassDiagramUpdated.png in this folder.

In this project, we are developing a game with Graphic User Iterface in which the program selects some colors from a list sequentially, and the user needs to guess the colors and positions of the colors correctly to win the game. If he selects the wrong colors or order, he will be shown black color for each wrong guess of color and silver for the wrong position of each color. He will get 20 tries to retry again, and after 20 tries, he will lose the game, and the correct colors the system has picked will be displayed to the user. In between, the user can even give up the game and view the correct colors the system has picked.

We are planning to use four classes in the program, and the classes, their  relations, and data fields are shown in the class diagram and will explain the functionality of each class briefly:

ConstantsUtil class: This class will store constant fields like color lists and predefined messages that need to be printed and can be reused across all the classes in the project.

ColorsandPositionGenerator class: This class will select the colors from the list and organize them at random positions in an array.

PatternMatcher class: This class will be used to check the picked colors and positions of colors the user has chosen and the positions the system has generated. It will return the black color for correct color and position mapping and silver for correct color mapping but wrong position mapping.

GameUI class: This class will be used to start the game's UI and display messages to Users. This class can communicate with the ConstantsUtil, ColorsandPositionGenrator, and PatternMatcher classes and has all the IO(Input-Out) tasks to communicate with users in the UI. This class has all the tries that the user has made and will finish the game for the user once the tries exceed the limit, or else the user will sent to pick colors screen and will guess the colors again.

-----------------------------------------------------------------------

2. Discuss what language you would use.

We want to use Java for developing this game as it gives robust support with OOP principles. It allows code distribution into different classes based on functionality, which helps in modular development and is easier to manage and extend. Java has a wide range of libraries and classes that can be used for everyday programming tasks, such as random number generation, input/output handling, and data structures.

Moreover, We have experience working with Java and feel comfortable working with it. We want to make our development process while developing this game go smoothly and want to focus more on business logic than on language and implementing it.

-----------------------------------------------------------------------
3. How do you plan to structure the program, what libraries would you use?

We are planning to use libraries like java.util.Random for generating random numbers, Junit for unit testing the code, Swing or JavaFX for developing user interface, Lombok to generate boilerplate code for getters, setters, and constructors, Maven or Gradle for building the deployment package and for managing the dependencies and libraries for the project, Swing or JavaFX for developing GUI of the game.

We want to maintain the projuct structure as follows for this game:

ColorPickingGame>
             src>
                 main>
                      java>
			   com>
			       colorPickingGame>
					        PatternMatcher.java	
						ColorsandPositionGenerator.java
						GameInitializer.java
						util>
						     ConstantsUtil.java
			    Main.java
		 test>
		      java>
			   MainTest.java
				    
						     




Total[10]: 8

Need to use proper notations in the UML diagram, showing cardinality.
Too many details that are low level that should not be shown in the diagram.
Need to clearly bring out in the model the separation of colors the user guesses and the colors used for the responses.


